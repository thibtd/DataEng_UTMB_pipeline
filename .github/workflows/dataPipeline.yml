name: Makefile CI

on:
  push:
    branches: 
      - main
    paths:
      - 'dags/**'
      - 'plugins/**'
      - '.github/workflows/**'
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      # This is the version of the action for setting up Python, not the Python version.
      uses: actions/setup-python@v5
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: '3.12'
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
      
    - name: init Docker containers
      run: docker compose up  airflow-init
    
    - name: wait for Airflow to start
      run:  make wait_for_airflow
  
    - name: start Docker containers
      run: docker compose up -d
    
    - name: list DAGS
      run: docker exec dataeng_utmb_pipeline-airflow-webserver-1 airflow dags list
   
    - name: run DAG
      run: make run_dag_GHActions

    - name: Wait for DAG completion
      run: |
        MAX_WAIT=180  # 5 minutes timeout
        INTERVAL=10   # Check every 10 seconds
        ELAPSED=0
        
        while [ $ELAPSED -lt $MAX_WAIT ]; do
          # Check specifically the last run status
          STATUS=$(docker exec dataeng_utmb_pipeline-airflow-webserver-1 airflow dags list-runs -d utmb_flow --no-backfill | grep -E "success|failed|running" || echo "pending")
          echo "{$STATUS}" 
          if [[ $STATUS == *"success"* ]]; then
            echo "Last DAG run completed successfully"
            break
          elif [[ $STATUS == *"failed"* ]]; then
            echo "Last DAG run failed"
            make stop_docker
            exit 1
          elif [[ $STATUS == *"running"* ]]; then
            echo "DAG is still running... ($ELAPSED seconds elapsed)"
          else
            echo "Waiting for DAG to start... ($ELAPSED seconds elapsed)"
          fi
          sleep $INTERVAL
          ELAPSED=$((ELAPSED + INTERVAL))
        done
        
        if [ $ELAPSED -ge $MAX_WAIT ]; then
          echo "Timeout waiting for DAG completion"
          make stop_docker
          exit 1
        fi

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: ran the DAGs and updated the data
    - name: stop Docker containers
      run: make stop_docker

